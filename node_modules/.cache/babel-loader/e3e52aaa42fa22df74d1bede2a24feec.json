{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Table.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid, Box } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { connect } from \"react-redux\";\nimport { addOrder } from \"../../../redux/actions/orderAction\";\nimport { modifyTable } from \"../../../redux/actions/tableAction\"; // consulta a la  API Graphql\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_ORDER } from \"../../../services/Mutations\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 275,\n    margin: 10,\n    height: 180\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 15.0,\n    outline: \"none\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  rowContainer: {\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: \"space-between\"\n  },\n  semaforo: {\n    fontSize: 12,\n    color: \"red\"\n  }\n}));\n/*\n  Componente de mesa\n*/\n\nconst Table = ({\n  color,\n  number,\n  free,\n  order,\n  addOrder,\n  modifyTable,\n  orders\n}) => {\n  _s();\n\n  const classes = useStyles();\n  let order_id_param = order;\n  const order_obj = orders.filter(order => order._id === order_id_param)[0];\n  let dishes_ready = [];\n\n  if (order_obj !== undefined) {\n    if (order_obj.dishes !== undefined) {\n      let dishes = order_obj.dishes;\n      dishes_ready = dishes.filter(dish => dish.state === \"ready\");\n    }\n  } // instaciamos la mutaciÃ³n que vamos a utilizar\n\n\n  const [createOrder] = useMutation(CREATE_ORDER); // usamos history para redireccionar al usuario\n\n  const history = useHistory();\n\n  const send = async () => {\n    if (free) {\n      await createOrder({\n        variables: {\n          table: number\n        }\n      }).then(result => {\n        let order = result.data.createOrder;\n        order_id_param = order._id;\n        addOrder(order);\n        modifyTable({\n          number,\n          order_id_param\n        });\n        history.push(`/mozo/${order_id_param}`);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      history.push(`/mozo/${order_id_param}`);\n    }\n  };\n  /*\n    Render de la vista de la mesa\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    marginTop: 10,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      Item: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        style: {\n          backgroundColor: `${color}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h2\",\n              children: [\"Mesa \", number]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h2\",\n              children: free ? \"Libre\" : \"Ocupada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), dishes_ready.length > 0 && /*#__PURE__*/_jsxDEV(Avatar, {\n              style: {\n                width: 20,\n                height: 20,\n                color: \"red\",\n                backgroundColor: \"black\"\n              },\n              children: dishes_ready.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          color: \"ineriht\",\n          className: classes.button,\n          startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 24\n          }, this),\n          onClick: send,\n          children: free ? \"ATENDER\" : \"VER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"5zLwX6wgA/i8Q9W71oP7UwxP9gk=\", false, function () {\n  return [useStyles, useMutation, useHistory];\n});\n\n_c = Table;\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addOrder: payload => dispatch(addOrder(payload)),\n    modifyTable: payload => dispatch(modifyTable(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Table.js"],"names":["React","useHistory","Card","CardContent","Avatar","Typography","Grid","Box","makeStyles","Button","SendIcon","connect","addOrder","modifyTable","useMutation","CREATE_ORDER","useStyles","theme","root","width","margin","height","bullet","display","transform","title","fontSize","pos","marginBottom","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","borderRadius","outline","boxShadow","shadows","padding","spacing","rowContainer","direction","justify","semaforo","color","Table","number","free","order","orders","classes","order_id_param","order_obj","filter","_id","dishes_ready","undefined","dishes","dish","state","createOrder","history","send","variables","table","then","result","data","push","catch","error","console","log","length","button","mapStateToProps","mapDispatchToProps","dispatch","payload"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,oCAAzB;AACA,SAASC,WAAT,QAA4B,oCAA5B,C,CACA;;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,MAAM,EAAE;AAHJ,GADiC;AAMvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,cADH;AAENH,IAAAA,MAAM,EAAE,OAFF;AAGNI,IAAAA,SAAS,EAAE;AAHL,GAN+B;AAWvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAXgC;AAcvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,YAAY,EAAE;AADX,GAdkC;AAiBvCC,EAAAA,KAAK,EAAE;AACLN,IAAAA,OAAO,EAAE,MADJ;AAELO,IAAAA,UAAU,EAAE,QAFP;AAGLC,IAAAA,cAAc,EAAE;AAHX,GAjBgC;AAsBvCC,EAAAA,KAAK,EAAE;AACLb,IAAAA,KAAK,EAAE,GADF;AAELc,IAAAA,eAAe,EAAEhB,KAAK,CAACiB,OAAN,CAAcC,UAAd,CAAyBH,KAFrC;AAGLI,IAAAA,YAAY,EAAE,IAHT;AAILC,IAAAA,OAAO,EAAE,MAJJ;AAKLC,IAAAA,SAAS,EAAErB,KAAK,CAACsB,OAAN,CAAc,CAAd,CALN;AAMLC,IAAAA,OAAO,EAAEvB,KAAK,CAACwB,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AANJ,GAtBgC;AA8BvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE,KADC;AAEZb,IAAAA,UAAU,EAAE,QAFA;AAGZc,IAAAA,OAAO,EAAE;AAHG,GA9ByB;AAmCvCC,EAAAA,QAAQ,EAAE;AACRnB,IAAAA,QAAQ,EAAE,EADF;AAERoB,IAAAA,KAAK,EAAE;AAFC;AAnC6B,CAAZ,CAAD,CAA5B;AAyCA;AACA;AACA;;AACA,MAAMC,KAAK,GAAG,CAAC;AACbD,EAAAA,KADa;AAEbE,EAAAA,MAFa;AAGbC,EAAAA,IAHa;AAIbC,EAAAA,KAJa;AAKbtC,EAAAA,QALa;AAMbC,EAAAA,WANa;AAObsC,EAAAA;AAPa,CAAD,KAQR;AAAA;;AACJ,QAAMC,OAAO,GAAGpC,SAAS,EAAzB;AACA,MAAIqC,cAAc,GAAGH,KAArB;AACA,QAAMI,SAAS,GAAGH,MAAM,CAACI,MAAP,CAAeL,KAAD,IAAWA,KAAK,CAACM,GAAN,KAAcH,cAAvC,EAAuD,CAAvD,CAAlB;AACA,MAAII,YAAY,GAAG,EAAnB;;AACA,MAAIH,SAAS,KAAKI,SAAlB,EAA6B;AAC3B,QAAIJ,SAAS,CAACK,MAAV,KAAqBD,SAAzB,EAAoC;AAClC,UAAIC,MAAM,GAAGL,SAAS,CAACK,MAAvB;AACAF,MAAAA,YAAY,GAAGE,MAAM,CAACJ,MAAP,CAAeK,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,OAAvC,CAAf;AACD;AACF,GAVG,CAYJ;;;AACA,QAAM,CAACC,WAAD,IAAgBhD,WAAW,CAACC,YAAD,CAAjC,CAbI,CAcJ;;AACA,QAAMgD,OAAO,GAAG9D,UAAU,EAA1B;;AAEA,QAAM+D,IAAI,GAAG,YAAY;AACvB,QAAIf,IAAJ,EAAU;AACR,YAAMa,WAAW,CAAC;AAChBG,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAElB;AADE;AADK,OAAD,CAAX,CAKHmB,IALG,CAKGC,MAAD,IAAY;AAChB,YAAIlB,KAAK,GAAGkB,MAAM,CAACC,IAAP,CAAYP,WAAxB;AACAT,QAAAA,cAAc,GAAGH,KAAK,CAACM,GAAvB;AACA5C,QAAAA,QAAQ,CAACsC,KAAD,CAAR;AACArC,QAAAA,WAAW,CAAC;AAAEmC,UAAAA,MAAF;AAAUK,UAAAA;AAAV,SAAD,CAAX;AACAU,QAAAA,OAAO,CAACO,IAAR,CAAc,SAAQjB,cAAe,EAArC;AACD,OAXG,EAYHkB,KAZG,CAYIC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAdG,CAAN;AAeD,KAhBD,MAgBO;AACLT,MAAAA,OAAO,CAACO,IAAR,CAAc,SAAQjB,cAAe,EAArC;AACD;AACF,GApBD;AAsBA;AACF;AACA;;;AACE,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAE,EAAhB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAED,OAAO,CAAClC,IAAzB;AAA+B,QAAA,KAAK,EAAE;AAAEe,UAAAA,eAAe,EAAG,GAAEa,KAAM;AAA5B,SAAtC;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,WAAD;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,SAAS,EAAC,IAAnC;AAAA,kCACQE,MADR;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,SAAS,EAAC,IAAnC;AAAA,wBACGC,IAAI,GAAG,OAAH,GAAa;AADpB;AAAA;AAAA;AAAA;AAAA,oBAJF,EAQGQ,YAAY,CAACkB,MAAb,GAAsB,CAAtB,iBACC,QAAC,MAAD;AACE,cAAA,KAAK,EAAE;AACLxD,gBAAAA,KAAK,EAAE,EADF;AAELE,gBAAAA,MAAM,EAAE,EAFH;AAGLyB,gBAAAA,KAAK,EAAE,KAHF;AAILb,gBAAAA,eAAe,EAAE;AAJZ,eADT;AAAA,wBAQGwB,YAAY,CAACkB;AARhB;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAwBE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,SAHR;AAIE,UAAA,SAAS,EAAEvB,OAAO,CAACwB,MAJrB;AAKE,UAAA,SAAS,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBALb;AAME,UAAA,OAAO,EAAEZ,IANX;AAAA,oBAQGf,IAAI,GAAG,SAAH,GAAe;AARtB;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CA3FD;;GAAMF,K;UASY/B,S,EAYMF,W,EAENb,U;;;KAvBZ8C,K;;AA6FN,MAAM8B,eAAe,GAAIhB,KAAD,IAAW;AACjC,SAAO;AACLV,IAAAA,MAAM,EAAEU,KAAK,CAACX,KAAN,CAAYC;AADf,GAAP;AAGD,CAJD;;AAMA,MAAM2B,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLnE,IAAAA,QAAQ,EAAGoE,OAAD,IAAaD,QAAQ,CAACnE,QAAQ,CAACoE,OAAD,CAAT,CAD1B;AAELnE,IAAAA,WAAW,EAAGmE,OAAD,IAAaD,QAAQ,CAAClE,WAAW,CAACmE,OAAD,CAAZ;AAF7B,GAAP;AAID,CALD;;AAOA,eAAerE,OAAO,CAACkE,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C/B,KAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid, Box } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { connect } from \"react-redux\";\nimport { addOrder } from \"../../../redux/actions/orderAction\";\nimport { modifyTable } from \"../../../redux/actions/tableAction\";\n// consulta a la  API Graphql\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_ORDER } from \"../../../services/Mutations\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 275,\n    margin: 10,\n    height: 180,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 15.0,\n    outline: \"none\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  rowContainer: {\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: \"space-between\",\n  },\n  semaforo: {\n    fontSize: 12,\n    color: \"red\",\n  },\n}));\n\n/*\n  Componente de mesa\n*/\nconst Table = ({\n  color,\n  number,\n  free,\n  order,\n  addOrder,\n  modifyTable,\n  orders,\n}) => {\n  const classes = useStyles();\n  let order_id_param = order;\n  const order_obj = orders.filter((order) => order._id === order_id_param)[0];\n  let dishes_ready = [];\n  if (order_obj !== undefined) {\n    if (order_obj.dishes !== undefined) {\n      let dishes = order_obj.dishes;\n      dishes_ready = dishes.filter((dish) => dish.state === \"ready\");\n    }\n  }\n\n  // instaciamos la mutaciÃ³n que vamos a utilizar\n  const [createOrder] = useMutation(CREATE_ORDER);\n  // usamos history para redireccionar al usuario\n  const history = useHistory();\n\n  const send = async () => {\n    if (free) {\n      await createOrder({\n        variables: {\n          table: number,\n        },\n      })\n        .then((result) => {\n          let order = result.data.createOrder;\n          order_id_param = order._id;\n          addOrder(order);\n          modifyTable({ number, order_id_param });\n          history.push(`/mozo/${order_id_param}`);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      history.push(`/mozo/${order_id_param}`);\n    }\n  };\n\n  /*\n    Render de la vista de la mesa\n  */\n  return (\n    <Box marginTop={10}>\n      <Grid Item>\n        <Card className={classes.root} style={{ backgroundColor: `${color}` }}>\n          <Box mb={3}>\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                Mesa {number}\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                {free ? \"Libre\" : \"Ocupada\"}\n              </Typography>\n\n              {dishes_ready.length > 0 && (\n                <Avatar\n                  style={{\n                    width: 20,\n                    height: 20,\n                    color: \"red\",\n                    backgroundColor: \"black\",\n                  }}\n                >\n                  {dishes_ready.length}\n                </Avatar>\n              )}\n            </CardContent>\n          </Box>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color=\"ineriht\"\n            className={classes.button}\n            startIcon={<SendIcon />}\n            onClick={send}\n          >\n            {free ? \"ATENDER\" : \"VER\"}\n          </Button>\n        </Card>\n      </Grid>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addOrder: (payload) => dispatch(addOrder(payload)),\n    modifyTable: (payload) => dispatch(modifyTable(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}