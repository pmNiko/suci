[{"/Users/nikolas/Documents/React/Proyecto Final/suci/src/index.js":"1","/Users/nikolas/Documents/React/Proyecto Final/suci/src/App.js":"2","/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/store.js":"3","/Users/nikolas/Documents/React/Proyecto Final/suci/src/styles/themeConfig.js":"4","/Users/nikolas/Documents/React/Proyecto Final/suci/src/services/Queries.js":"5","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/pages/floor.js":"6","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/common/navbar.js":"7","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/pages/kitchen.js":"8","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/till/Till.js":"9","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/IndexMozo.js":"10","/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/actions/orderAction.js":"11","/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/reducers/index.js":"12","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Tables.js":"13","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Menu.js":"14","/Users/nikolas/Documents/React/Proyecto Final/suci/src/utils/database.js":"15","/Users/nikolas/Documents/React/Proyecto Final/suci/src/utils/links.js":"16","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/kitchen/comandaCard.js":"17","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Order.js":"18","/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/actions/tableAction.js":"19","/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/reducers/orderReducer.js":"20","/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/reducers/tableReducers.js":"21","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Table.js":"22","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/MenuFooter.js":"23","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/MenuItems.js":"24","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/kitchen/contentCard.js":"25","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/OrderFooter.js":"26","/Users/nikolas/Documents/React/Proyecto Final/suci/src/services/Mutations.js":"27"},{"size":609,"mtime":1611325668892,"results":"28","hashOfConfig":"29"},{"size":2438,"mtime":1611540028602,"results":"30","hashOfConfig":"29"},{"size":272,"mtime":1611540028606,"results":"31","hashOfConfig":"29"},{"size":552,"mtime":1611325668894,"results":"32","hashOfConfig":"29"},{"size":571,"mtime":1611540028607,"results":"33","hashOfConfig":"29"},{"size":156,"mtime":1611325324285,"results":"34","hashOfConfig":"29"},{"size":1768,"mtime":1611010754133,"results":"35","hashOfConfig":"29"},{"size":212,"mtime":1611010754137,"results":"36","hashOfConfig":"29"},{"size":2929,"mtime":1611010754137,"results":"37","hashOfConfig":"29"},{"size":478,"mtime":1611195767494,"results":"38","hashOfConfig":"29"},{"size":1169,"mtime":1611585093063,"results":"39","hashOfConfig":"29"},{"size":323,"mtime":1611540028605,"results":"40","hashOfConfig":"29"},{"size":1021,"mtime":1611540028605,"results":"41","hashOfConfig":"29"},{"size":1946,"mtime":1611332516538,"results":"42","hashOfConfig":"29"},{"size":5013,"mtime":1611325324286,"results":"43","hashOfConfig":"29"},{"size":207,"mtime":1611333177439,"results":"44","hashOfConfig":"29"},{"size":3886,"mtime":1611540028603,"results":"45","hashOfConfig":"29"},{"size":7648,"mtime":1611587474197,"results":"46","hashOfConfig":"29"},{"size":439,"mtime":1611587763700,"results":"47","hashOfConfig":"29"},{"size":2461,"mtime":1611585199727,"results":"48","hashOfConfig":"29"},{"size":1001,"mtime":1611587750896,"results":"49","hashOfConfig":"29"},{"size":3302,"mtime":1611540028604,"results":"50","hashOfConfig":"29"},{"size":1814,"mtime":1611325668891,"results":"51","hashOfConfig":"29"},{"size":1860,"mtime":1611540028603,"results":"52","hashOfConfig":"29"},{"size":1087,"mtime":1611540028603,"results":"53","hashOfConfig":"29"},{"size":1350,"mtime":1611325668892,"results":"54","hashOfConfig":"29"},{"size":1749,"mtime":1611586117038,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1pqsu00",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/nikolas/Documents/React/Proyecto Final/suci/src/index.js",[],["120","121"],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/App.js",["122","123"],"import { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./styles/themeConfig\";\nimport { Navbar } from \"./components/common/navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// consulta a la  API Graphql\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_ORDERS } from \"./services/Queries\";\nimport { connect } from \"react-redux\";\nimport { fetchOrders } from \"./redux/actions/orderAction\";\n\n// lazy es una funciÃ³n y Suspense es un componente\nimport React, { lazy, Suspense, useEffect } from \"react\";\n/*  React carga los componentes de manera sincronica, \n    lazy load hace que los componentes se carguen de manera\n    diferida a medida que los vayamos requiriendo. Lazy busca \n    el componente y Suspense lo inyecta al DOM */\nconst IndexMozo = lazy(() => import(\"./components/layout/mozo/IndexMozo\"));\nconst Kitchen = lazy(() => import(\"./components/pages/kitchen\"));\nconst Till = lazy(() => import(\"./components/layout/till/Till\"));\nconst Floor = lazy(() => import(\"./components/pages/floor\"));\n\nfunction App({ fetchOrders }) {\n  // consulta a partir del hook de apollo\n  const { loading, error, data } = useQuery(GET_ORDERS);\n\n  // loading || console.log(\"App: \", data.orders);\n  useEffect(() => {\n    loading || fetchOrders(data.orders);\n  }, [loading]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      {/* El BrowserRouter es quien maneja el routing y este va en el \n        nivel mas alto de la app */}\n      <Router>\n        <Navbar />\n        {/* Inyecta el componente en el dom */}\n        <Suspense fallback={\"Cargando...\"}>\n          {/* El Switch sirve para renderizar la primer coincidencia */}\n          <Switch>\n            {/* Route se encarga de sentenciar las rutas con las cuales\n            renderear los componentes y la variante exact matchea la ruta exacta*/}\n\n            <Route path=\"/\" exact component={Floor} />\n            <Route path=\"/mozo/:order_id_param\" exact component={IndexMozo} />\n            <Route path=\"/kitchen\" exact component={Kitchen} />\n            <Route path=\"/till\" exact component={Till} />\n            <Route path=\"/floor\" exact component={Floor} />\n          </Switch>\n        </Suspense>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchOrders: (payload) => dispatch(fetchOrders(payload)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/store.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/styles/themeConfig.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/services/Queries.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/pages/floor.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/common/navbar.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/pages/kitchen.js",["124"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport ComandaCard from \"../layout/kitchen/comandaCard\";\n\nexport const Kitchen = () => {\n  return <ComandaCard />;\n};\n\nexport default Kitchen;\n","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/till/Till.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/IndexMozo.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/actions/orderAction.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/reducers/index.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Tables.js",["125","126","127"],"import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core/\";\nimport { connect } from \"react-redux\";\nimport { fetchTables } from \"../../../redux/actions/tableAction\";\n// consulta a la  API Graphql\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_TABLES } from \"../../../services/Queries\";\n\nimport Table from \"./Table\";\n\nconst Tables = ({ fetchTables, tables }) => {\n  const { loading, error, data } = useQuery(GET_TABLES);\n\n  useEffect(() => {\n    if (!loading) {\n      fetchTables(data.tables);\n    }\n  }, [loading]);\n\n  return (\n    <Grid container justify=\"center\">\n      {tables !== undefined &&\n        tables.map((table, index) => <Table key={index} {...table} />)}\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    tables: state.table.tables,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchTables: (payload) => dispatch(fetchTables(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tables);\n","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Menu.js",["128","129"],"import React, { useState } from \"react\";\nimport { Grid, Box, Typography } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport MenuFooter from \"./MenuFooter\";\nimport MenuItems from \"./MenuItems\";\nimport Divider from \"@material-ui/core/Divider\";\n// consulta a la  API Graphql\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_DISHES } from \"../../../services/Queries\";\n\nconst useStyle = makeStyles(() => ({\n  test: {\n    background: purple[500],\n  },\n}));\n\n//----- Componente de Menu padre ------ //\n\nconst Menu = () => {\n  // stado para el manejo de category\n  const [category, setCategory] = useState(\"Rapidas\");\n\n  // consulta a partir del hook de apollo\n  const { loading, error, data } = useQuery(GET_DISHES);\n  let dishes = [];\n  if (!loading) {\n    dishes = data.dishes.filter((item) => item.category === `${category}`);\n  }\n\n  const classes = useStyle();\n  return (\n    <Grid container md={12}>\n      <Grid item md={12}>\n        <Box m={3}>\n          <Grid\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Typography>Menu </Typography>\n            <Typography>{category}</Typography>\n          </Grid>\n        </Box>\n        <Divider />\n      </Grid>\n      <Grid item md={12}>\n        <Box m={3}>\n          <Grid\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Typography>Item </Typography>\n            <Typography>AcciÃ³n</Typography>\n          </Grid>\n        </Box>\n        {!loading && <MenuItems dishes={dishes} />}\n      </Grid>\n      <Grid item md={12}>\n        <Box border={0} m={2} align=\"center\">\n          <MenuFooter setCategory={setCategory} category={category} />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Menu;\n","/Users/nikolas/Documents/React/Proyecto Final/suci/src/utils/database.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/utils/links.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/kitchen/comandaCard.js",["130"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport ContentCard from \"./contentCard\";\nimport { connect } from \"react-redux\";\nimport { modifyOrder } from \"../../../redux/actions/orderAction\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 275,\n    margin: 10,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 15.0,\n    outline: \"none\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  rowContainer: {\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: \"space-between\",\n  },\n  semaforo: {\n    fontSize: 12,\n    color: \"red\",\n  },\n}));\n\nconst ComandaCard = ({ orders, modify }) => {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>â¢</span>;\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Grid container justify=\"center\">\n      {orders !== undefined &&\n        orders.map(({ date, time, table, _id, number, closed }, index) => (\n          <Grid item key={_id}>\n            <Card className={classes.root} onClick={handleOpen}>\n              <CardContent>\n                <Typography\n                  className={classes.title}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Fecha : {date} {\" - \"} hora {time}\n                </Typography>\n                <Typography variant=\"h6\" component=\"h2\">\n                  Comanda: {number}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                  Mesa: {table}\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Grid container className={classes.rowContainer}>\n                  <Button\n                    size=\"small\"\n                    onClick={() => {\n                      modify(_id);\n                    }}\n                  >\n                    Ver\n                  </Button>\n                  <Typography className={classes.semaforo}>\n                    Cerrada: {closed.toString()}\n                  </Typography>\n                </Grid>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <ContentCard {...orders[0]} />\n          </div>\n        </Fade>\n      </Modal>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // modify recibe el payload\n    modify: (payload) => dispatch(modifyOrder(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComandaCard);\n","/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Order.js",["131","132","133"],"import React from \"react\";\nimport { Grid, Box } from \"@material-ui/core/\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport OrderFooter from \"./OrderFooter\";\nimport { connect } from \"react-redux\";\nimport {\n  removeItem,\n  incrementItem,\n  decrementItem,\n  removeOrder,\n} from \"../../../redux/actions/orderAction\";\nimport { resetTable } from \"../../../redux/actions/tableAction\";\n// consulta a la  API Graphql\nimport { useMutation } from \"@apollo/react-hooks\";\nimport {\n  REMOVE_ITEM,\n  INCREMENT_ITEM,\n  DECREMENT_ITEM,\n  REMOVE_ORDER,\n} from \"../../../services/Mutations\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useParams } from \"react-router-dom\";\n\n//----- Componente de Menu de Items ---- //\n\nconst Order = ({ orders, remove, inc, dec, removeOrder, resetTable }) => {\n  const history = useHistory();\n\n  const { order_id_param } = useParams();\n  const order = orders.filter((order) => order._id === order_id_param)[0];\n\n  // EliminaciÃ³n de un item de la comanda\n  const [popDishToOrder] = useMutation(REMOVE_ITEM);\n\n  const removeDish = async (item, order_id) => {\n    await popDishToOrder({\n      variables: {\n        order_id: order_id,\n        dish_id: item._id,\n      },\n    })\n      .then((result) => {\n        let { dishes } = result.data.popDishToOrder;\n        // console.log(dishes); //ya no se encuentra el item incluido\n        remove({ ...item, order_id });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  // Incrementa la cantidad de un item de la comanda\n  const [incrementDishToOrder] = useMutation(INCREMENT_ITEM);\n\n  const incrementDish = async (item, order_id) => {\n    await incrementDishToOrder({\n      variables: {\n        order_id: order_id,\n        dish_id: item._id,\n      },\n    })\n      .then((result) => {\n        let { dishes } = result.data.incrementDishToOrder;\n        // console.log(\"Dishes: \", dishes); //aumento la cantidad\n        inc({ ...item, order_id });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  // Decrementa la cantidad de un item de la comanda\n  const [decrementDishToOrder] = useMutation(DECREMENT_ITEM);\n\n  const decrementDish = async (item, order_id) => {\n    await decrementDishToOrder({\n      variables: {\n        order_id: order_id,\n        dish_id: item._id,\n      },\n    })\n      .then((result) => {\n        let { dishes } = result.data.decrementDishToOrder;\n        // console.log(\"Dishes: \", dishes); //aumento la cantidad\n        dec({ ...item, order_id });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // Elimina la comanda\n  const [deleteOrder] = useMutation(REMOVE_ORDER);\n\n  const popOrder = async (order_id, table) => {\n    await deleteOrder({\n      variables: {\n        order_id: order_id,\n      },\n    })\n      .then((result) => {\n        // let { order } = result.data.deleteOrder;\n        removeOrder(order_id);\n        resetTable(table);\n        history.push(\"/floor\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div>\n      <Grid container spacing={1} justify=\"center\">\n        <Grid item md={12}>\n          <TableContainer>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Comanda {order?.number}</TableCell>\n                  <TableCell>Mesa: {order?.table} </TableCell>\n                  <TableCell>Fecha: {order?.date}</TableCell>\n                  <TableCell>Hora: {order?.time} </TableCell>\n                  <TableCell>\n                    <IconButton aria-label=\"RemoveCircleOutlineIcon\">\n                      <DeleteSweepIcon\n                        fontSize=\"small\"\n                        onClick={() => {\n                          popOrder(order._id, order.table);\n                        }}\n                      />\n                    </IconButton>{\" \"}\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody></TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n\n        <Grid item md={12}>\n          <Box m={2} mb={3}>\n            <TableContainer>\n              <Table aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Eliminar</TableCell>\n                    <TableCell>Item</TableCell>\n                    <TableCell>Cantidad</TableCell>\n                    <TableCell>Quitar</TableCell>\n                    <TableCell>Agregar</TableCell>\n                    <TableCell>Estado</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {order.dishes?.map((item) => (\n                    <TableRow key={1}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        <IconButton\n                          aria-label=\"delete\"\n                          onClick={() => removeDish(item, order._id)}\n                        >\n                          <DeleteIcon fontSize=\"small\" />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {item.name}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {item.count}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        <IconButton\n                          aria-label=\"RemoveCircleOutlineIcon\"\n                          onClick={() => decrementDish(item, order._id)}\n                        >\n                          <RemoveCircleOutlineIcon fontSize=\"small\" />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        <IconButton\n                          aria-label=\"AddCircleOutlineIcon\"\n                          onClick={() => incrementDish(item, order._id)}\n                        >\n                          <AddCircleOutlineIcon fontSize=\"small\" />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {item.state && \"pendiente\"}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Box>\n        </Grid>\n\n        <OrderFooter />\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    remove: (item) => dispatch(removeItem(item)),\n    inc: (item) => dispatch(incrementItem(item)),\n    dec: (item) => dispatch(decrementItem(item)),\n    removeOrder: (order_id) => dispatch(removeOrder(order_id)),\n    resetTable: (number) => dispatch(resetTable(number)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);\n","/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/actions/tableAction.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/reducers/orderReducer.js",["134","135"],"import {\n  FETCH_ORDERS,\n  ADD_ORDER,\n  MODIFY_ORDER,\n  REMOVE_ORDER,\n  ADD_ITEM,\n  REMOVE_ITEM,\n  INCREMENT_ITEM,\n  DECREMENT_ITEM,\n} from \"../actions/orderAction\";\n\n// Estado inicial\nconst initialState = { orders: [] };\n\nexport function order(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ORDERS:\n      return {\n        orders: action.payload,\n      };\n\n    case ADD_ORDER:\n      return {\n        orders: [action.payload, ...state.orders],\n      };\n\n    case MODIFY_ORDER:\n      return {\n        orders: [\n          ...state.orders.map((order) => {\n            if (order._id === action.payload) {\n              order.closed = !order.closed;\n            }\n            return order;\n          }),\n        ],\n      };\n\n    case REMOVE_ORDER:\n      return {\n        orders: [\n          ...state.orders.filter((order) => order._id === action.payload),\n        ],\n      };\n\n    case ADD_ITEM:\n      return {\n        orders: [\n          ...state.orders.map((order) => {\n            if (order._id === action.payload.order_id) {\n              let newItem = action.payload;\n              delete newItem.order_id;\n              order.dishes = [newItem, ...order.dishes];\n            }\n            return order;\n          }),\n        ],\n      };\n\n    case REMOVE_ITEM:\n      return {\n        orders: [\n          ...state.orders.map((order) => {\n            if (order._id === action.payload.order_id) {\n              order.dishes = order.dishes.filter(\n                (dish) => dish._id !== action.payload._id\n              );\n            }\n            return order;\n          }),\n        ],\n      };\n\n    case INCREMENT_ITEM:\n      return {\n        orders: [\n          ...state.orders.map((order) => {\n            if (order._id === action.payload.order_id) {\n              order.dishes.map((item) => {\n                if (item._id === action.payload._id) {\n                  item.count += 1;\n                }\n              });\n            }\n            return order;\n          }),\n        ],\n      };\n\n    case DECREMENT_ITEM:\n      return {\n        orders: [\n          ...state.orders.map((order) => {\n            if (order._id === action.payload.order_id) {\n              order.dishes.map((item) => {\n                if (item._id === action.payload._id) {\n                  item.count -= 1;\n                }\n              });\n            }\n            return order;\n          }),\n        ],\n      };\n\n    default:\n      return state;\n  }\n}\n","/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/reducers/tableReducers.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Table.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/MenuFooter.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/MenuItems.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/kitchen/contentCard.js",["136","137"],"import React from \"react\";\nimport { Grid, Typography, Checkbox, Box, Button } from \"@material-ui/core\";\nimport { platosComanda } from \"../../../utils/database\";\n\nexport const ContentCard = ({ dishes }) => {\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n  return (\n    <Box>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        {dishes.map(({ name }, index) => (\n          <Grid item>\n            <Grid\n              container\n              key={index}\n              direction=\"row\"\n              alignItems=\"center\"\n              justify=\"space-between\"\n            >\n              <Typography>{name}</Typography>\n              <Checkbox\n                checked={index.checked}\n                onChange={handleChange}\n                color=\"primary\"\n              />\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n      <Button variant=\"contained\" color=\"primary\" disableElevation>\n        Despachar\n      </Button>\n    </Box>\n  );\n};\n\nexport default ContentCard;\n",["138","139"],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/OrderFooter.js",[],"/Users/nikolas/Documents/React/Proyecto Final/suci/src/services/Mutations.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":24,"column":20,"nodeType":"146","messageId":"147","endLine":24,"endColumn":25},{"ruleId":"148","severity":1,"message":"149","line":29,"column":6,"nodeType":"150","endLine":29,"endColumn":15,"suggestions":"151"},{"ruleId":"144","severity":1,"message":"152","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"144","severity":1,"message":"153","line":1,"column":28,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"145","line":12,"column":20,"nodeType":"146","messageId":"147","endLine":12,"endColumn":25},{"ruleId":"148","severity":1,"message":"154","line":18,"column":6,"nodeType":"150","endLine":18,"endColumn":15,"suggestions":"155"},{"ruleId":"144","severity":1,"message":"145","line":25,"column":20,"nodeType":"146","messageId":"147","endLine":25,"endColumn":25},{"ruleId":"144","severity":1,"message":"156","line":31,"column":9,"nodeType":"146","messageId":"147","endLine":31,"endColumn":16},{"ruleId":"144","severity":1,"message":"157","line":58,"column":9,"nodeType":"146","messageId":"147","endLine":58,"endColumn":13},{"ruleId":"144","severity":1,"message":"158","line":54,"column":15,"nodeType":"146","messageId":"147","endLine":54,"endColumn":21},{"ruleId":"144","severity":1,"message":"158","line":73,"column":15,"nodeType":"146","messageId":"147","endLine":73,"endColumn":21},{"ruleId":"144","severity":1,"message":"158","line":92,"column":15,"nodeType":"146","messageId":"147","endLine":92,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":79,"column":39,"nodeType":"161","messageId":"162","endLine":79,"endColumn":41},{"ruleId":"159","severity":1,"message":"160","line":95,"column":39,"nodeType":"161","messageId":"162","endLine":95,"endColumn":41},{"ruleId":"144","severity":1,"message":"163","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":23},{"ruleId":"144","severity":1,"message":"164","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":17},{"ruleId":"140","replacedBy":"165"},{"ruleId":"142","replacedBy":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data.orders' and 'fetchOrders'. Either include them or remove the dependency array. If 'fetchOrders' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["169"],"'Grid' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'data.tables' and 'fetchTables'. Either include them or remove the dependency array. If 'fetchTables' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["170"],"'classes' is assigned a value but never used.","'bull' is assigned a value but never used.","'dishes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'platosComanda' is defined but never used.","'checked' is assigned a value but never used.",["167"],["168"],"no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [data.orders, fetchOrders, loading]",{"range":"175","text":"176"},"Update the dependencies array to be: [data.tables, fetchTables, loading]",{"range":"177","text":"178"},[1315,1324],"[data.orders, fetchOrders, loading]",[552,561],"[data.tables, fetchTables, loading]"]