{"version":3,"sources":["services/Mutations.js","components/layout/mozo/MenuFooter.js","components/layout/mozo/MenuItems.js","components/layout/mozo/Menu.js","components/layout/mozo/OrderFooter.js","components/layout/mozo/Order.js","components/layout/mozo/IndexMozo.js"],"names":["CREATE_ORDER","gql","ADD_ITEM","REMOVE_ITEM","INCREMENT_ITEM","DECREMENT_ITEM","REMOVE_ORDER","CLOSE_ORDER","PAY_ORDER","DISHES_PREPARING","DISH_DELIVERED","DISH_READY","DISH_PREPARING","useStyles","makeStyles","root","width","MenuFooter","setCategory","category","classes","BottomNavigation","value","onChange","event","newValue","showLabels","className","BottomNavigationAction","label","icon","connect","dispatch","add","item","addItem","dishes","order_id","useParams","order_id_param","useMutation","addDishToOrder","addDish","item_id","a","variables","dish_id","then","result","data","loadedItem","length","catch","error","console","log","Paper","style","height","overflow","Grid","md","map","Box","m","border","borderRadius","boxShadow","container","direction","justify","Typography","name","price","Button","variant","color","onClick","_id","useStyle","test","background","purple","Menu","useState","useQuery","GET_DISHES","loading","filter","alignItems","Divider","align","theme","button","margin","spacing","sendKitchen","bill","desability_send_kitchen","desability_bill","size","disabled","startIcon","state","orders","order","remove","removeItem","inc","incrementItem","dec","decrementItem","removeOrder","resetTable","number","dishesPreparing","payload","dishesPreparingToOrder","changeDishDelivered","changeDishReady","billOrder","history","useHistory","setDesability_bill","setDesability_send_kitchen","useEffect","undefined","dishes_pending","dish","dishes_delivered","hability","disable","popDishToOrder","removeDish","incrementDishToOrder","incrementDish","decrementDishToOrder","decrementDish","deleteOrder","popOrder","table","push","dishPreparingToOrder","dishDelivered","dishReady","onTable","closeOrder","items","total_delivered","alert","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","date","time","IconButton","fontSize","TableBody","mb","component","scope","count","Checkbox","checked","OrderFooter","IndexMozo"],"mappings":"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","file":"static/js/9.e24d0a39.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\n\n/*\n  Mutation para crear una comanda\n*/\nexport const CREATE_ORDER = gql`\n  # definición de la mutación\n  mutation CreateOrder($table: Int!) {\n    # ejecución de la mutación\n    createOrder(table: $table) {\n      _id\n      number\n      date\n      time\n      table\n      closed\n    }\n  }\n`;\n\n/*\n  Mutation para agregar un item a una comanda\n*/\nexport const ADD_ITEM = gql`\n  # definición de la mutación\n  mutation AddDishToOrder($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    addDishToOrder(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        name\n        price\n        category\n        count\n        state\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para eliminar un item a una comanda\n*/\nexport const REMOVE_ITEM = gql`\n  # definición de la mutación\n  mutation PopDishToOrder($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    popDishToOrder(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para incrementar la cantidad de un item a una comanda\n*/\nexport const INCREMENT_ITEM = gql`\n  # definición de la mutación\n  mutation IncrementDishToOrder($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    incrementDishToOrder(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        count\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para decrementar la cantidad de un item a una comanda\n*/\nexport const DECREMENT_ITEM = gql`\n  # definición de la mutación\n  mutation IncrementDishToOrder($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    decrementDishToOrder(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        count\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para eliminar una comanda\n*/\nexport const REMOVE_ORDER = gql`\n  # definición de la mutación\n  mutation DeleteOrder($order_id: ID!) {\n    # ejecución de la mutación\n    deleteOrder(order_id: $order_id) {\n      _id\n      table\n    }\n  }\n`;\n\n/*\n  Mutation para cerrar una comanda\n*/\nexport const CLOSE_ORDER = gql`\n  # definición de la mutación\n  mutation CloseOrder($order_id: ID!) {\n    # ejecución de la mutación\n    closeOrder(order_id: $order_id) {\n      _id\n      table\n    }\n  }\n`;\n\n/*\n  Mutation para pagar una comanda\n*/\nexport const PAY_ORDER = gql`\n  # definición de la mutación\n  mutation PayOrder($order_id: ID!) {\n    # ejecución de la mutación\n    payOrder(order_id: $order_id) {\n      _id\n      paid\n    }\n  }\n`;\n\n/*\n  Mutation para enviar a cocina los items pendientes de una comanda\n*/\nexport const DISHES_PREPARING = gql`\n  # definición de la mutación\n  mutation DishPreparingToOrder($order_id: ID!, $dishes: [ID]) {\n    # ejecución de la mutación\n    dishPreparingToOrder(order_id: $order_id, dishes: $dishes) {\n      dishes {\n        _id\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para cambiar el estado de los platos que estan listos\n*/\nexport const DISHES_READY = gql`\n  # definición de la mutación\n  mutation DishReadyToOrder($order_id: ID!, $dishes: [ID]) {\n    # ejecución de la mutación\n    dishReadyToOrder(order_id: $order_id, dishes: $dishes) {\n      dishes {\n        _id\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para cambiar el estado de un item entregado\n*/\nexport const DISH_DELIVERED = gql`\n  # definición de la mutación\n  mutation DishDelivered($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    dishDelivered(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        count\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para cambiar el estado de un item listo\n*/\nexport const DISH_READY = gql`\n  # definición de la mutación\n  mutation DishReady($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    dishReady(order_id: $order_id, dish_id: $dish_id) {\n      _id\n      dishes {\n        _id\n        state\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para cambiar el estado de un item en preparación\n*/\nexport const DISH_PREPARING = gql`\n  # definición de la mutación\n  mutation DishPreparing($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    dishPreparing(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        count\n      }\n    }\n  }\n`;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport Forward10SharpIcon from \"@material-ui/icons/Forward10Sharp\";\nimport RestaurantSharpIcon from \"@material-ui/icons/RestaurantSharp\";\nimport LocalDiningSharpIcon from \"@material-ui/icons/LocalDiningSharp\";\nimport MoodIcon from \"@material-ui/icons/Mood\";\nimport LocalDrinkIcon from \"@material-ui/icons/LocalDrink\";\nimport FreeBreakfastIcon from \"@material-ui/icons/FreeBreakfast\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"95%\",\n  },\n});\n/*\n  Componente para el filtrado de categorias del menu\n*/\n// El componente recibe el setter y guetter de filtro\nconst MenuFooter = ({ setCategory, category }) => {\n  const classes = useStyles();\n\n  const filterDish = (event, newValue) => {\n    setCategory(newValue);\n  };\n\n  return (\n    <BottomNavigation\n      value={category}\n      onChange={filterDish}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction\n        label=\"Rapidas\"\n        value=\"Rapidas\"\n        icon={<Forward10SharpIcon />}\n      />\n      <BottomNavigationAction\n        label=\"Platos\"\n        value=\"Platos\"\n        icon={<RestaurantSharpIcon />}\n      />\n      <BottomNavigationAction\n        label=\"Ensaladas\"\n        value=\"Ensaladas\"\n        icon={<LocalDiningSharpIcon />}\n      />\n      <BottomNavigationAction\n        label=\"Refrescos\"\n        value=\"Refrescos\"\n        icon={<LocalDrinkIcon />}\n      />\n      <BottomNavigationAction\n        label=\"Cafeteria\"\n        value=\"Cafeteria\"\n        icon={<FreeBreakfastIcon />}\n      />\n      <BottomNavigationAction\n        label=\"Postres\"\n        value=\"Postres\"\n        icon={<MoodIcon />}\n      />\n    </BottomNavigation>\n  );\n};\n\nexport default MenuFooter;\n","import React from \"react\";\nimport { Grid, Typography, Box, Paper } from \"@material-ui/core/\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../../../redux/actions/orderAction\";\n// consulta a la  API Graphql\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ADD_ITEM } from \"../../../services/Mutations\";\nimport { useParams } from \"react-router-dom\";\n\n// ----- Componente encargado de mostrar los items ----- //\nconst MenuItems = ({ dishes, add }) => {\n  const { order_id_param } = useParams();\n  const order_id = order_id_param;\n  // instaciamos la mutación que vamos a utilizar\n  const [addDishToOrder] = useMutation(ADD_ITEM);\n\n  // Funciones\n  const addDish = async (item_id) => {\n    await addDishToOrder({\n      variables: {\n        order_id: order_id,\n        dish_id: item_id,\n      },\n    })\n      .then((result) => {\n        let { dishes } = result.data.addDishToOrder;\n        let loadedItem = dishes[dishes.length - 1];\n        add({ ...loadedItem, order_id });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <Paper style={{ height: 400, overflow: \"auto\" }}>\n      <Grid item md={12}>\n        {dishes.map((item) => (\n          <Box m={3} border={0} borderRadius={10} boxShadow={3}>\n            <Grid\n              container\n              key={item._id}\n              direction=\"row\"\n              justify=\"space-between\"\n            >\n              <Box style={{ width: \"30%\" }}>\n                <Typography>{item.name}</Typography>\n              </Box>\n              <Box style={{ width: 50 }}>\n                <Typography>{item.price}</Typography>\n              </Box>\n              <Box>\n                <Button\n                  variant=\"text\"\n                  color=\"primary\"\n                  onClick={() => addDish(item._id)}\n                >\n                  Agregar\n                </Button>\n              </Box>\n            </Grid>\n          </Box>\n        ))}\n      </Grid>\n    </Paper>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    add: (item) => dispatch(addItem(item)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(MenuItems);\n","import React, { useState } from \"react\";\nimport { Grid, Box, Typography } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport MenuFooter from \"./MenuFooter\";\nimport MenuItems from \"./MenuItems\";\nimport Divider from \"@material-ui/core/Divider\";\n// consulta a la  API Graphql\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_DISHES } from \"../../../services/Queries\";\n\nconst useStyle = makeStyles(() => ({\n  test: {\n    background: purple[500],\n  },\n}));\n\n//----- Componente de Menu ------ //\nconst Menu = () => {\n  // stado para el manejo de category\n  const [category, setCategory] = useState(\"Rapidas\");\n\n  // consulta a partir del hook de apollo\n  const { loading, error, data } = useQuery(GET_DISHES);\n  let dishes = [];\n  if (!loading) {\n    dishes = data.dishes.filter((item) => item.category === `${category}`);\n  }\n\n  const classes = useStyle();\n  return (\n    <Grid container md={12} justify=\"center\">\n      <Grid item md={12}>\n        <Box m={3}>\n          <Grid\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Typography>Menu </Typography>\n            <Typography>{category}</Typography>\n          </Grid>\n        </Box>\n        <Divider />\n        {!loading && <MenuItems dishes={dishes} />}\n      </Grid>\n      <Grid item md={12}>\n        <Box border={0} m={2} align=\"center\">\n          <MenuFooter setCategory={setCategory} category={category} />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport { Box, Button, Grid } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\n/*\n  Componente para las acciones generales de la comanda\n*/\nconst MenuFooter = ({\n  sendKitchen,\n  bill,\n  desability_send_kitchen,\n  desability_bill,\n}) => {\n  const classes = useStyles();\n  return (\n    <Grid container md={12}>\n      <Grid item spacing={1} md={6}>\n        <Box border={0} m={2} align=\"center\">\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            color=\"primary\"\n            className={classes.button}\n            disabled={desability_bill}\n            onClick={() => {\n              bill();\n            }}\n            startIcon={<ReceiptIcon />}\n          >\n            Facturar\n          </Button>\n        </Box>\n      </Grid>\n      <Grid item spacing={1} md={6}>\n        <Box border={0} m={2} align=\"center\">\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            color=\"secondary\"\n            className={classes.button}\n            disabled={desability_send_kitchen}\n            onClick={() => {\n              sendKitchen();\n            }}\n            startIcon={<SendIcon />}\n          >\n            Ordenar\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MenuFooter;\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Box, Checkbox } from \"@material-ui/core/\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport Table from \"@material-ui/core/Table\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport OrderFooter from \"./OrderFooter\";\nimport { connect } from \"react-redux\";\nimport {\n  removeItem,\n  incrementItem,\n  decrementItem,\n  removeOrder,\n  dishesPreparingToOrder,\n  changeDishDelivered,\n  changeDishReady,\n  billOrder,\n} from \"../../../redux/actions/orderAction\";\nimport { resetTable } from \"../../../redux/actions/tableAction\";\n// consulta a la  API Graphql\nimport { useMutation } from \"@apollo/react-hooks\";\nimport {\n  REMOVE_ITEM,\n  INCREMENT_ITEM,\n  DECREMENT_ITEM,\n  REMOVE_ORDER,\n  DISHES_PREPARING,\n  DISH_DELIVERED,\n  DISH_READY,\n  CLOSE_ORDER,\n} from \"../../../services/Mutations\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useParams } from \"react-router-dom\";\n\n//----- Componente de Menu de Items ---- //\n\nconst Order = ({\n  orders,\n  remove,\n  inc,\n  dec,\n  removeOrder,\n  resetTable,\n  dishesPreparing,\n  changeDishDelivered,\n  changeDishReady,\n  billOrder,\n}) => {\n  const history = useHistory();\n  // Recupera el id de la comanda que llega por parametro para filtrar\n  // la comanda a gestionar.\n  const { order_id_param } = useParams();\n  const order = orders.filter((order) => order._id === order_id_param)[0];\n\n  // Estados de los botones facturar y ordenar -> useEffect\n  const [desability_bill, setDesability_bill] = useState(true);\n  const [desability_send_kitchen, setDesability_send_kitchen] = useState(true);\n\n  useEffect(() => {\n    if (order.dishes === undefined) {\n      setDesability_send_kitchen(true);\n    } else {\n      if (order.dishes.length >= 0) {\n        let dishes_pending = order.dishes.filter(\n          (dish) => dish.state === \"pending\"\n        );\n        setDesability_send_kitchen(!dishes_pending.length > 0);\n      } else {\n        setDesability_send_kitchen(true);\n      }\n    }\n  }, [orders]);\n\n  useEffect(() => {\n    if (order.dishes === undefined) {\n      setDesability_bill(true);\n    } else {\n      if (order.dishes.length >= 0) {\n        let dishes_delivered = order.dishes.filter(\n          (dish) => dish.state === \"delivered\"\n        );\n        let hability = order.dishes.length === dishes_delivered.length;\n        let disable = order.dishes.length > 0 && hability;\n        setDesability_bill(!disable);\n      } else {\n        setDesability_bill(true);\n      }\n    }\n  }, [orders]);\n\n  // Eliminación de un plato de la comanda\n  const [popDishToOrder] = useMutation(REMOVE_ITEM);\n  const removeDish = async (item, order_id) => {\n    await popDishToOrder({\n      variables: {\n        order_id: order_id,\n        dish_id: item._id,\n      },\n    })\n      .then((result) => {\n        let { dishes } = result.data.popDishToOrder;\n        // console.log(dishes); //ya no se encuentra el item incluido\n        remove({ ...item, order_id });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // Incrementa la cantidad de un item de un plato\n  const [incrementDishToOrder] = useMutation(INCREMENT_ITEM);\n  const incrementDish = async (item, order_id) => {\n    await incrementDishToOrder({\n      variables: {\n        order_id: order_id,\n        dish_id: item._id,\n      },\n    })\n      .then((result) => {\n        let { dishes } = result.data.incrementDishToOrder;\n        // console.log(\"Dishes: \", dishes); //aumento la cantidad\n        inc({ ...item, order_id });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // Decrementa la cantidad de un item de un plato\n  const [decrementDishToOrder] = useMutation(DECREMENT_ITEM);\n  const decrementDish = async (item, order_id) => {\n    await decrementDishToOrder({\n      variables: {\n        order_id: order_id,\n        dish_id: item._id,\n      },\n    })\n      .then((result) => {\n        let { dishes } = result.data.decrementDishToOrder;\n        // console.log(\"Dishes: \", dishes); //aumento la cantidad\n        dec({ ...item, order_id });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // Elimina la comanda\n  const [deleteOrder] = useMutation(REMOVE_ORDER);\n  const popOrder = async (order_id, table) => {\n    await deleteOrder({\n      variables: {\n        order_id: order_id,\n      },\n    })\n      .then((result) => {\n        // let { order } = result.data.deleteOrder;\n        history.push(\"/floor\");\n        removeOrder(order_id);\n        resetTable(table);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // Cambia el estado de los platos y los envia a cocina\n  const [dishPreparingToOrder] = useMutation(DISHES_PREPARING);\n  const sendKitchen = async () => {\n    let order_id = order._id;\n    let dishes_pending = order.dishes.filter(\n      (dish) => dish.state === \"pending\"\n    );\n    let dishes = [];\n    dishes_pending.map((dish) => dishes.push(dish._id));\n    dishesPreparing({ dishes, order_id });\n    await dishPreparingToOrder({\n      variables: {\n        order_id: order_id,\n        dishes: dishes,\n      },\n    })\n      .then((result) => {\n        let { dishes } = result.data.dishPreparingToOrder;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // Checked de entrega. Gestiona la entrega de platos\n  const [dishDelivered] = useMutation(DISH_DELIVERED);\n  const [dishReady] = useMutation(DISH_READY);\n  const onTable = async (order_id, dish) => {\n    let dish_id = dish._id;\n    if (dish.state === \"ready\") {\n      changeDishDelivered({ order_id, dish_id });\n      await dishDelivered({\n        variables: {\n          order_id: order_id,\n          dish_id: dish_id,\n        },\n      })\n        .then((result) => {\n          let { order } = result.data.dishDelivered;\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      changeDishReady({ order_id, dish_id });\n      await dishReady({\n        variables: {\n          order_id: order_id,\n          dish_id: dish_id,\n        },\n      })\n        .then((result) => {\n          let { order } = result.data.dishReady;\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  // Gestiona el cierre de la comanda\n  const [closeOrder] = useMutation(CLOSE_ORDER);\n  const bill = async () => {\n    let items = order.dishes.length;\n    let total_delivered = order.dishes.filter(\n      (dish) => dish.state === \"delivered\"\n    ).length;\n    if (items === total_delivered && items > 0) {\n      let order_id = order._id;\n      billOrder(order_id);\n      resetTable(order.table);\n      history.push(\"/\");\n      await closeOrder({\n        variables: {\n          order_id: order_id,\n        },\n      })\n        .then((result) => {\n          // let { order } = result.data.closeOrder\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      alert(\"Aun no se puede facturar\");\n    }\n  };\n\n  /*\n    Componente de comanda \n  */\n  return (\n    <div>\n      <Grid container spacing={0} justify=\"center\">\n        <Grid item md={12}>\n          <TableContainer>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Comanda {order?.number}</TableCell>\n                  <TableCell>Mesa: {order?.table} </TableCell>\n                  <TableCell>Fecha: {order?.date}</TableCell>\n                  <TableCell>Hora: {order?.time} </TableCell>\n                  <TableCell>\n                    <IconButton aria-label=\"RemoveCircleOutlineIcon\">\n                      <DeleteSweepIcon\n                        fontSize=\"small\"\n                        onClick={() => {\n                          popOrder(order._id, order.table);\n                        }}\n                      />\n                    </IconButton>{\" \"}\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody></TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Paper style={{ height: 400, width: \"95%\", overflow: \"auto\" }}>\n          <Grid item md={12}>\n            <Box m={2} mb={3}>\n              <TableContainer>\n                <Table aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Eliminar</TableCell>\n                      <TableCell>Item</TableCell>\n                      <TableCell align=\"center\">Quitar</TableCell>\n                      <TableCell align=\"center\">Cantidad</TableCell>\n                      <TableCell>Acción</TableCell>\n                      <TableCell>Estado</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {order.dishes?.map((item) => (\n                      <TableRow key={1}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          <IconButton\n                            aria-label=\"delete\"\n                            onClick={() => removeDish(item, order._id)}\n                          >\n                            <DeleteIcon fontSize=\"small\" />\n                          </IconButton>\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {item.name}\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                          {item.state === \"pending\" && item.count > 1 && (\n                            <IconButton\n                              aria-label=\"RemoveCircleOutlineIcon\"\n                              onClick={() => decrementDish(item, order._id)}\n                            >\n                              <RemoveCircleOutlineIcon fontSize=\"small\" />\n                            </IconButton>\n                          )}\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                          {item.count}\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {item.state === \"pending\" && (\n                            <IconButton\n                              aria-label=\"AddCircleOutlineIcon\"\n                              onClick={() => incrementDish(item, order._id)}\n                            >\n                              <AddCircleOutlineIcon fontSize=\"small\" />\n                            </IconButton>\n                          )}\n                          {item.state === \"ready\" && (\n                            <Checkbox\n                              checked={false}\n                              onChange={() => {\n                                onTable(order._id, item);\n                              }}\n                              color=\"primary\"\n                            />\n                          )}\n                          {item.state === \"delivered\" && (\n                            <Checkbox\n                              checked={true}\n                              onChange={() => {\n                                onTable(order._id, item);\n                              }}\n                              color=\"primary\"\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {item.state === \"pending\" && \"Pendiente\"}\n                          {item.state === \"preparing\" && \"Preparando\"}\n                          {item.state === \"ready\" && \"Listo\"}\n                          {item.state === \"delivered\" && \"En mesa\"}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Box>\n          </Grid>\n        </Paper>\n        <OrderFooter\n          sendKitchen={sendKitchen}\n          bill={bill}\n          desability_send_kitchen={desability_send_kitchen}\n          desability_bill={desability_bill}\n        />\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    remove: (item) => dispatch(removeItem(item)),\n    inc: (item) => dispatch(incrementItem(item)),\n    dec: (item) => dispatch(decrementItem(item)),\n    removeOrder: (order_id) => dispatch(removeOrder(order_id)),\n    resetTable: (number) => dispatch(resetTable(number)),\n    dishesPreparing: (payload) => dispatch(dishesPreparingToOrder(payload)),\n    changeDishDelivered: (payload) => dispatch(changeDishDelivered(payload)),\n    changeDishReady: (payload) => dispatch(changeDishReady(payload)),\n    billOrder: (payload) => dispatch(billOrder(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);\n","import React from \"react\";\nimport { Grid, Box } from \"@material-ui/core/\";\nimport Menu from \"../mozo/Menu\";\nimport Order from \"../mozo/Order\";\n\n/*\n\tComponente encargado de renderear el menu y la comanda\n*/\nexport default function IndexMozo() {\n  return (\n    <Grid container spacing={1} justify=\"center\">\n      {/* header de Menu */}\n      <Grid item md={6}>\n        <Box border={1} m={3} align=\"center\">\n          <Menu />\n        </Box>\n      </Grid>\n      <Grid item md={6}>\n        <Box border={1} m={3} align=\"center\">\n          <Order />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n"],"sourceRoot":""}