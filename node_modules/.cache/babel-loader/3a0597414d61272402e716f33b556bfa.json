{"ast":null,"code":"import { gql } from \"apollo-boost\";\n/*\n  Mutation para crear una comanda\n*/\n\nexport const CREATE_ORDER = gql`\n  # definición de la mutación\n  mutation CreateOrder($table: Int!) {\n    # ejecución de la mutación\n    createOrder(table: $table) {\n      _id\n      number\n      date\n      time\n      table\n      closed\n    }\n  }\n`;\n/*\n  Mutation para agregar un item a una comanda\n*/\n\nexport const ADD_ITEM = gql`\n  # definición de la mutación\n  mutation AddDishToOrder($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    addDishToOrder(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        name\n        price\n        category\n        count\n        state\n      }\n    }\n  }\n`;\n/*\n  Mutation para eliminar un item a una comanda\n*/\n\nexport const REMOVE_ITEM = gql`\n  # definición de la mutación\n  mutation PopDishToOrder($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    popDishToOrder(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n      }\n    }\n  }\n`;\n/*\n  Mutation para incrementar la cantidad de un item a una comanda\n*/\n\nexport const INCREMENT_ITEM = gql`\n  # definición de la mutación\n  mutation IncrementDishToOrder($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    incrementDishToOrder(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        count\n      }\n    }\n  }\n`;\n/*\n  Mutation para decrementar la cantidad de un item a una comanda\n*/\n\nexport const DECREMENT_ITEM = gql`\n  # definición de la mutación\n  mutation IncrementDishToOrder($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    decrementDishToOrder(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        count\n      }\n    }\n  }\n`;\n/*\n  Mutation para eliminar una comanda\n*/\n\nexport const REMOVE_ORDER = gql`\n  # definición de la mutación\n  mutation DeleteOrder($order_id: ID!) {\n    # ejecución de la mutación\n    deleteOrder(order_id: $order_id) {\n      _id\n      table\n    }\n  }\n`;\n/*\n  Mutation para cerrar una comanda\n*/\n\nexport const CLOSE_ORDER = gql`\n  # definición de la mutación\n  mutation CloseOrder($order_id: ID!) {\n    # ejecución de la mutación\n    closeOrder(order_id: $order_id) {\n      _id\n      table\n    }\n  }\n`;\n/*\n  Mutation para pagar una comanda\n*/\n\nexport const PAY_ORDER = gql`\n  # definición de la mutación\n  mutation PayOrder($order_id: ID!) {\n    # ejecución de la mutación\n    payOrder(order_id: $order_id) {\n      _id\n      paid\n    }\n  }\n`;\n/*\n  Mutation para enviar a cocina los items pendientes de una comanda\n*/\n\nexport const DISHES_PREPARING = gql`\n  # definición de la mutación\n  mutation DishPreparingToOrder($order_id: ID!, $dishes: [ID]) {\n    # ejecución de la mutación\n    dishPreparingToOrder(order_id: $order_id, dishes: $dishes) {\n      dishes {\n        _id\n      }\n    }\n  }\n`;\n/*\n  Mutation para cambiar el estado de los platos que estan listos\n*/\n\nexport const DISHES_READY = gql`\n  # definición de la mutación\n  mutation DishReadyToOrder($order_id: ID!, $dishes: [ID]) {\n    # ejecución de la mutación\n    dishReadyToOrder(order_id: $order_id, dishes: $dishes) {\n      dishes {\n        _id\n      }\n    }\n  }\n`;\n/*\n  Mutation para cambiar el estado de un item entregado\n*/\n\nexport const DISH_DELIVERED = gql`\n  # definición de la mutación\n  mutation DishDelivered($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    dishDelivered(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        count\n      }\n    }\n  }\n`;\n/*\n  Mutation para cambiar el estado de un item listo\n*/\n\nexport const DISH_READY = gql`\n  # definición de la mutación\n  mutation DishReady($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    dishReady(order_id: $order_id, dish_id: $dish_id) {\n      _id\n      dishes {\n        _id\n        state\n      }\n    }\n  }\n`;\n/*\n  Mutation para cambiar el estado de un item en preparación\n*/\n\nexport const DISH_PREPARING = gql`\n  # definición de la mutación\n  mutation DishPreparing($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    dishPreparing(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        count\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/nikolas/Documents/React/Proyecto Final/suci/src/services/Mutations.js"],"names":["gql","CREATE_ORDER","ADD_ITEM","REMOVE_ITEM","INCREMENT_ITEM","DECREMENT_ITEM","REMOVE_ORDER","CLOSE_ORDER","PAY_ORDER","DISHES_PREPARING","DISHES_READY","DISH_DELIVERED","DISH_READY","DISH_PREPARING"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAGD,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbO;AAeP;AACA;AACA;;AACA,OAAO,MAAME,QAAQ,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP;AACA;AACA;;AACA,OAAO,MAAMG,WAAW,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVO;AAYP;AACA;AACA;;AACA,OAAO,MAAMI,cAAc,GAAGJ,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;AAaP;AACA;AACA;;AACA,OAAO,MAAMK,cAAc,GAAGL,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;AAaP;AACA;AACA;;AACA,OAAO,MAAMM,YAAY,GAAGN,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;AAWP;AACA;AACA;;AACA,OAAO,MAAMO,WAAW,GAAGP,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;AAWP;AACA;AACA;;AACA,OAAO,MAAMQ,SAAS,GAAGR,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;AAWP;AACA;AACA;;AACA,OAAO,MAAMS,gBAAgB,GAAGT,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVO;AAYP;AACA;AACA;;AACA,OAAO,MAAMU,YAAY,GAAGV,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVO;AAYP;AACA;AACA;;AACA,OAAO,MAAMW,cAAc,GAAGX,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;AAaP;AACA;AACA;;AACA,OAAO,MAAMY,UAAU,GAAGZ,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZO;AAcP;AACA;AACA;;AACA,OAAO,MAAMa,cAAc,GAAGb,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO","sourcesContent":["import { gql } from \"apollo-boost\";\n\n/*\n  Mutation para crear una comanda\n*/\nexport const CREATE_ORDER = gql`\n  # definición de la mutación\n  mutation CreateOrder($table: Int!) {\n    # ejecución de la mutación\n    createOrder(table: $table) {\n      _id\n      number\n      date\n      time\n      table\n      closed\n    }\n  }\n`;\n\n/*\n  Mutation para agregar un item a una comanda\n*/\nexport const ADD_ITEM = gql`\n  # definición de la mutación\n  mutation AddDishToOrder($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    addDishToOrder(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        name\n        price\n        category\n        count\n        state\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para eliminar un item a una comanda\n*/\nexport const REMOVE_ITEM = gql`\n  # definición de la mutación\n  mutation PopDishToOrder($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    popDishToOrder(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para incrementar la cantidad de un item a una comanda\n*/\nexport const INCREMENT_ITEM = gql`\n  # definición de la mutación\n  mutation IncrementDishToOrder($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    incrementDishToOrder(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        count\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para decrementar la cantidad de un item a una comanda\n*/\nexport const DECREMENT_ITEM = gql`\n  # definición de la mutación\n  mutation IncrementDishToOrder($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    decrementDishToOrder(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        count\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para eliminar una comanda\n*/\nexport const REMOVE_ORDER = gql`\n  # definición de la mutación\n  mutation DeleteOrder($order_id: ID!) {\n    # ejecución de la mutación\n    deleteOrder(order_id: $order_id) {\n      _id\n      table\n    }\n  }\n`;\n\n/*\n  Mutation para cerrar una comanda\n*/\nexport const CLOSE_ORDER = gql`\n  # definición de la mutación\n  mutation CloseOrder($order_id: ID!) {\n    # ejecución de la mutación\n    closeOrder(order_id: $order_id) {\n      _id\n      table\n    }\n  }\n`;\n\n/*\n  Mutation para pagar una comanda\n*/\nexport const PAY_ORDER = gql`\n  # definición de la mutación\n  mutation PayOrder($order_id: ID!) {\n    # ejecución de la mutación\n    payOrder(order_id: $order_id) {\n      _id\n      paid\n    }\n  }\n`;\n\n/*\n  Mutation para enviar a cocina los items pendientes de una comanda\n*/\nexport const DISHES_PREPARING = gql`\n  # definición de la mutación\n  mutation DishPreparingToOrder($order_id: ID!, $dishes: [ID]) {\n    # ejecución de la mutación\n    dishPreparingToOrder(order_id: $order_id, dishes: $dishes) {\n      dishes {\n        _id\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para cambiar el estado de los platos que estan listos\n*/\nexport const DISHES_READY = gql`\n  # definición de la mutación\n  mutation DishReadyToOrder($order_id: ID!, $dishes: [ID]) {\n    # ejecución de la mutación\n    dishReadyToOrder(order_id: $order_id, dishes: $dishes) {\n      dishes {\n        _id\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para cambiar el estado de un item entregado\n*/\nexport const DISH_DELIVERED = gql`\n  # definición de la mutación\n  mutation DishDelivered($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    dishDelivered(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        count\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para cambiar el estado de un item listo\n*/\nexport const DISH_READY = gql`\n  # definición de la mutación\n  mutation DishReady($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    dishReady(order_id: $order_id, dish_id: $dish_id) {\n      _id\n      dishes {\n        _id\n        state\n      }\n    }\n  }\n`;\n\n/*\n  Mutation para cambiar el estado de un item en preparación\n*/\nexport const DISH_PREPARING = gql`\n  # definición de la mutación\n  mutation DishPreparing($order_id: ID!, $dish_id: ID!) {\n    # ejecución de la mutación\n    dishPreparing(order_id: $order_id, dish_id: $dish_id) {\n      dishes {\n        _id\n        count\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}