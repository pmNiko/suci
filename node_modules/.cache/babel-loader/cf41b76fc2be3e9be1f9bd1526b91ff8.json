{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Tables.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core/\";\nimport { connect } from \"react-redux\";\nimport { fetchTables } from \"../../../redux/actions/tableAction\"; // consulta a la  API Graphql\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_TABLES } from \"../../../services/Queries\";\nimport Table from \"./Table\";\n/*\n  Componente encargado de mostrar las mesas\n*/\n\nconst Tables = ({\n  fetchTables,\n  tables\n}) => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TABLES);\n  useEffect(() => {\n    if (data) {\n      fetchTables(data.tables);\n    }\n\n    console.log(\"Data tables: \", data);\n    console.log(\"loading tables: \", loading);\n    console.log(\"error tables: \", error);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justify: \"center\",\n    children: tables !== undefined && tables.map((table, index) => /*#__PURE__*/_jsxDEV(Table, { ...table\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 38\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tables, \"MIyWK+WDGXozRNXYyIBuaVd7f4g=\", false, function () {\n  return [useQuery];\n});\n\n_c = Tables;\n\nconst mapStateToProps = state => {\n  return {\n    tables: state.table.tables\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTables: payload => dispatch(fetchTables(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tables);\n\nvar _c;\n\n$RefreshReg$(_c, \"Tables\");","map":{"version":3,"sources":["/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Tables.js"],"names":["React","useEffect","useState","Grid","connect","fetchTables","useQuery","GET_TABLES","Table","Tables","tables","loading","error","data","console","log","undefined","map","table","index","mapStateToProps","state","mapDispatchToProps","dispatch","payload"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,oCAA5B,C,CACA;;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAEA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEJ,EAAAA,WAAF;AAAeK,EAAAA;AAAf,CAAD,KAA6B;AAAA;;AAC1C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACC,UAAD,CAAzC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,IAAJ,EAAU;AACRR,MAAAA,WAAW,CAACQ,IAAI,CAACH,MAAN,CAAX;AACD;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,OAAhC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,KAA9B;AACD,GAPQ,EAON,CAACC,IAAD,CAPM,CAAT;AASA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAA,cACGH,MAAM,KAAKM,SAAX,IACCN,MAAM,CAACO,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBAAkB,QAAC,KAAD,OAAuBD;AAAvB,OAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA,YAA7B;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlBD;;GAAMV,M;UAC6BH,Q;;;KAD7BG,M;;AAoBN,MAAMW,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLX,IAAAA,MAAM,EAAEW,KAAK,CAACH,KAAN,CAAYR;AADf,GAAP;AAGD,CAJD;;AAMA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLlB,IAAAA,WAAW,EAAGmB,OAAD,IAAaD,QAAQ,CAAClB,WAAW,CAACmB,OAAD,CAAZ;AAD7B,GAAP;AAGD,CAJD;;AAMA,eAAepB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,MAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core/\";\nimport { connect } from \"react-redux\";\nimport { fetchTables } from \"../../../redux/actions/tableAction\";\n// consulta a la  API Graphql\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_TABLES } from \"../../../services/Queries\";\n\nimport Table from \"./Table\";\n\n/*\n  Componente encargado de mostrar las mesas\n*/\nconst Tables = ({ fetchTables, tables }) => {\n  const { loading, error, data } = useQuery(GET_TABLES);\n\n  useEffect(() => {\n    if (data) {\n      fetchTables(data.tables);\n    }\n    console.log(\"Data tables: \", data);\n    console.log(\"loading tables: \", loading);\n    console.log(\"error tables: \", error);\n  }, [data]);\n\n  return (\n    <Grid container justify=\"center\">\n      {tables !== undefined &&\n        tables.map((table, index) => <Table key={index} {...table} />)}\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    tables: state.table.tables,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchTables: (payload) => dispatch(fetchTables(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tables);\n"]},"metadata":{},"sourceType":"module"}