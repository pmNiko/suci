{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/kitchen/comandaCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport ContentCard from \"./contentCard\";\nimport { connect } from \"react-redux\";\nimport { billOrder } from \"../../../redux/actions/orderAction\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 275,\n    margin: 10\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 15.0,\n    outline: \"none\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  rowContainer: {\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: \"space-between\"\n  },\n  semaforo: {\n    fontSize: 12,\n    color: \"red\"\n  }\n}));\n\nconst ComandaCard = ({\n  orders\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [idOrder, setIdOrder] = useState(\"\");\n  let order = orders[0];\n\n  if (idOrder !== undefined && idOrder !== \"\") {\n    order = orders.filter(order => order._id === idOrder);\n  }\n\n  let dishes_preparing = [];\n\n  if (orders !== undefined) {\n    if (order.dishes !== undefined) {\n      let dishes = order.dishes;\n      dishes_preparing = dishes.filter(dish => dish.state === \"preparing\");\n    }\n  }\n\n  const handleOpen = order_id => {\n    setIdOrder(order_id);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justify: \"center\",\n    children: [orders !== undefined && orders.map(({\n      date,\n      time,\n      table,\n      _id,\n      number,\n      closed\n    }, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        onClick: () => {\n          handleOpen(_id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: [\"Fecha : \", date, \" \", \" - \", \" hora \", time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: [\"Comanda: \", number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.pos,\n            color: \"textSecondary\",\n            children: [\"Mesa: \", table]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), dishes_preparing.length > 0 && /*#__PURE__*/_jsxDEV(Avatar, {\n            style: {\n              width: 20,\n              height: 20,\n              color: \"red\",\n              backgroundColor: \"black\"\n            },\n            children: dishes_preparing.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            className: classes.rowContainer,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.semaforo,\n              children: closed ? \"Cerrada\" : \"Abierta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, _id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      \"aria-labelledby\": \"transition-modal-title\",\n      \"aria-describedby\": \"transition-modal-description\",\n      className: classes.modal,\n      open: open,\n      onClose: handleClose,\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 500\n      },\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        in: open,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(ContentCard, {\n            order: order\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ComandaCard, \"Qk12WISgkJw3R99JCwbzRxXZIw8=\", false, function () {\n  return [useStyles];\n});\n\n_c = ComandaCard;\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // modify recibe el payload\n    close: payload => dispatch(billOrder(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComandaCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"ComandaCard\");","map":{"version":3,"sources":["/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/kitchen/comandaCard.js"],"names":["React","useState","makeStyles","Card","CardActions","CardContent","Avatar","Button","Typography","Grid","Modal","Backdrop","Fade","ContentCard","connect","billOrder","useStyles","theme","root","width","margin","bullet","display","transform","title","fontSize","pos","marginBottom","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","borderRadius","outline","boxShadow","shadows","padding","spacing","rowContainer","direction","justify","semaforo","color","ComandaCard","orders","classes","open","setOpen","idOrder","setIdOrder","order","undefined","filter","_id","dishes_preparing","dishes","dish","state","handleOpen","order_id","handleClose","map","date","time","table","number","closed","index","length","height","timeout","mapStateToProps","mapDispatchToProps","dispatch","close","payload"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport ContentCard from \"./contentCard\";\nimport { connect } from \"react-redux\";\nimport { billOrder } from \"../../../redux/actions/orderAction\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 275,\n    margin: 10,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 15.0,\n    outline: \"none\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  rowContainer: {\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: \"space-between\",\n  },\n  semaforo: {\n    fontSize: 12,\n    color: \"red\",\n  },\n}));\n\nconst ComandaCard = ({ orders }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [idOrder, setIdOrder] = useState(\"\");\n\n  let order = orders[0];\n  if (idOrder !== undefined && idOrder !== \"\") {\n    order = orders.filter((order) => order._id === idOrder);\n  }\n\n  let dishes_preparing = [];\n  if (orders !== undefined) {\n    if (order.dishes !== undefined) {\n      let dishes = order.dishes;\n      dishes_preparing = dishes.filter((dish) => dish.state === \"preparing\");\n    }\n  }\n\n  const handleOpen = (order_id) => {\n    setIdOrder(order_id);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Grid container justify=\"center\">\n      {orders !== undefined &&\n        orders.map(({ date, time, table, _id, number, closed }, index) => (\n          <Grid item key={_id}>\n            <Card\n              className={classes.root}\n              onClick={() => {\n                handleOpen(_id);\n              }}\n            >\n              <CardContent>\n                <Typography\n                  className={classes.title}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Fecha : {date} {\" - \"} hora {time}\n                </Typography>\n                <Typography variant=\"h6\" component=\"h2\">\n                  Comanda: {number}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                  Mesa: {table}\n                </Typography>\n                {dishes_preparing.length > 0 && (\n                  <Avatar\n                    style={{\n                      width: 20,\n                      height: 20,\n                      color: \"red\",\n                      backgroundColor: \"black\",\n                    }}\n                  >\n                    {dishes_preparing.length}\n                  </Avatar>\n                )}\n              </CardContent>\n              <CardActions>\n                <Grid container className={classes.rowContainer}>\n                  <Typography className={classes.semaforo}>\n                    {closed ? \"Cerrada\" : \"Abierta\"}\n                  </Typography>\n                </Grid>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <ContentCard order={order} />\n          </div>\n        </Fade>\n      </Modal>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // modify recibe el payload\n    close: (payload) => dispatch(billOrder(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComandaCard);\n"]},"metadata":{},"sourceType":"module"}