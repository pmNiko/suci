{"ast":null,"code":"import { FETCH_TABLES, MODIFY_TABLE, RESET_TABLE } from \"../actions/tableAction\"; // Estado inicial\n\nconst initialState = {\n  tables: []\n};\nexport function table(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_TABLES:\n      return {\n        tables: action.payload\n      };\n\n    case MODIFY_TABLE:\n      return {\n        tables: [...state.tables.map(table => {\n          if (table.number === action.payload.number) {\n            table.free = !table.free;\n            table.order = action.payload.order_id_param;\n          }\n\n          return table;\n        })]\n      };\n\n    case RESET_TABLE:\n      return {\n        tables: [...state.tables.map(table => {\n          if (table.number === action.payload) {\n            table.free = !table.free;\n            delete table.order;\n          }\n\n          return table;\n        })]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/nikolas/Documents/React/Proyecto Final/suci/src/redux/reducers/tableReducers.js"],"names":["FETCH_TABLES","MODIFY_TABLE","RESET_TABLE","initialState","tables","table","state","action","type","payload","map","number","free","order","order_id_param"],"mappings":"AAAA,SACEA,YADF,EAEEC,YAFF,EAGEC,WAHF,QAIO,wBAJP,C,CAMA;;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAArB;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAK,GAAGH,YAAvB,EAAqCI,MAArC,EAA6C;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,YAAL;AACE,aAAO;AACLI,QAAAA,MAAM,EAAEG,MAAM,CAACE;AADV,OAAP;;AAIF,SAAKR,YAAL;AACE,aAAO;AACLG,QAAAA,MAAM,EAAE,CACN,GAAGE,KAAK,CAACF,MAAN,CAAaM,GAAb,CAAkBL,KAAD,IAAW;AAC7B,cAAIA,KAAK,CAACM,MAAN,KAAiBJ,MAAM,CAACE,OAAP,CAAeE,MAApC,EAA4C;AAC1CN,YAAAA,KAAK,CAACO,IAAN,GAAa,CAACP,KAAK,CAACO,IAApB;AACAP,YAAAA,KAAK,CAACQ,KAAN,GAAcN,MAAM,CAACE,OAAP,CAAeK,cAA7B;AACD;;AACD,iBAAOT,KAAP;AACD,SANE,CADG;AADH,OAAP;;AAYF,SAAKH,WAAL;AACE,aAAO;AACLE,QAAAA,MAAM,EAAE,CACN,GAAGE,KAAK,CAACF,MAAN,CAAaM,GAAb,CAAkBL,KAAD,IAAW;AAC7B,cAAIA,KAAK,CAACM,MAAN,KAAiBJ,MAAM,CAACE,OAA5B,EAAqC;AACnCJ,YAAAA,KAAK,CAACO,IAAN,GAAa,CAACP,KAAK,CAACO,IAApB;AACA,mBAAOP,KAAK,CAACQ,KAAb;AACD;;AACD,iBAAOR,KAAP;AACD,SANE,CADG;AADH,OAAP;;AAYF;AACE,aAAOC,KAAP;AAjCJ;AAmCD","sourcesContent":["import {\n  FETCH_TABLES,\n  MODIFY_TABLE,\n  RESET_TABLE,\n} from \"../actions/tableAction\";\n\n// Estado inicial\nconst initialState = { tables: [] };\n\nexport function table(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_TABLES:\n      return {\n        tables: action.payload,\n      };\n\n    case MODIFY_TABLE:\n      return {\n        tables: [\n          ...state.tables.map((table) => {\n            if (table.number === action.payload.number) {\n              table.free = !table.free;\n              table.order = action.payload.order_id_param;\n            }\n            return table;\n          }),\n        ],\n      };\n\n    case RESET_TABLE:\n      return {\n        tables: [\n          ...state.tables.map((table) => {\n            if (table.number === action.payload) {\n              table.free = !table.free;\n              delete table.order;\n            }\n            return table;\n          }),\n        ],\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}