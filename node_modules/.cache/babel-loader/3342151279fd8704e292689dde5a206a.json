{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, Box, Typography } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport MenuFooter from \"./MenuFooter\";\nimport MenuItems from \"./MenuItems\";\nimport Divider from \"@material-ui/core/Divider\"; // consulta a la  API Graphql\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_DISHES } from \"../../../services/Queries\";\nconst useStyle = makeStyles(() => ({\n  test: {\n    background: purple[500]\n  }\n})); //----- Componente de Menu ------ //\n\nconst Menu = () => {\n  _s();\n\n  // stado para el manejo de category\n  const [category, setCategory] = useState(\"Rapidas\"); // consulta a partir del hook de apollo\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_DISHES);\n  let dishes = [];\n\n  if (!loading) {\n    dishes = data.dishes.filter(item => item.category === `${category}`);\n  }\n\n  const classes = useStyle();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    md: 12,\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 12,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        m: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          justify: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Menu \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), !loading && /*#__PURE__*/_jsxDEV(MenuItems, {\n        dishes: dishes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        border: 0,\n        m: 2,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(MenuFooter, {\n          setCategory: setCategory,\n          category: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"XGP3eEs7/PBTFa6dIN9SxUWEbFI=\", false, function () {\n  return [useQuery, useStyle];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/nikolas/Documents/React/Proyecto Final/suci/src/components/layout/mozo/Menu.js"],"names":["React","useState","Grid","Box","Typography","makeStyles","purple","MenuFooter","MenuItems","Divider","useQuery","GET_DISHES","useStyle","test","background","Menu","category","setCategory","loading","error","data","dishes","filter","item","classes"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CACA;;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AAEA,MAAMC,QAAQ,GAAGP,UAAU,CAAC,OAAO;AACjCQ,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAER,MAAM,CAAC,GAAD;AADd;AAD2B,CAAP,CAAD,CAA3B,C,CAMA;;AACA,MAAMS,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,SAAD,CAAxC,CAFiB,CAIjB;;AACA,QAAM;AAAEiB,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACC,UAAD,CAAzC;AACA,MAAIU,MAAM,GAAG,EAAb;;AACA,MAAI,CAACH,OAAL,EAAc;AACZG,IAAAA,MAAM,GAAGD,IAAI,CAACC,MAAL,CAAYC,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACP,QAAL,KAAmB,GAAEA,QAAS,EAA3D,CAAT;AACD;;AAED,QAAMQ,OAAO,GAAGZ,QAAQ,EAAxB;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,EAAE,EAAE,EAApB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAE,CAAR;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,SAAS,EAAC,KAFZ;AAGE,UAAA,UAAU,EAAC,QAHb;AAIE,UAAA,OAAO,EAAC,eAJV;AAAA,kCAME,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,UAAD;AAAA,sBAAaI;AAAb;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAZF,EAaG,CAACE,OAAD,iBAAY,QAAC,SAAD;AAAW,QAAA,MAAM,EAAEG;AAAnB;AAAA;AAAA;AAAA;AAAA,cAbf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,MAAM,EAAE,CAAb;AAAgB,QAAA,CAAC,EAAE,CAAnB;AAAsB,QAAA,KAAK,EAAC,QAA5B;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,WAAW,EAAEJ,WAAzB;AAAsC,UAAA,QAAQ,EAAED;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CApCD;;GAAMD,I;UAK6BL,Q,EAMjBE,Q;;;KAXZG,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, Box, Typography } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport MenuFooter from \"./MenuFooter\";\nimport MenuItems from \"./MenuItems\";\nimport Divider from \"@material-ui/core/Divider\";\n// consulta a la  API Graphql\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_DISHES } from \"../../../services/Queries\";\n\nconst useStyle = makeStyles(() => ({\n  test: {\n    background: purple[500],\n  },\n}));\n\n//----- Componente de Menu ------ //\nconst Menu = () => {\n  // stado para el manejo de category\n  const [category, setCategory] = useState(\"Rapidas\");\n\n  // consulta a partir del hook de apollo\n  const { loading, error, data } = useQuery(GET_DISHES);\n  let dishes = [];\n  if (!loading) {\n    dishes = data.dishes.filter((item) => item.category === `${category}`);\n  }\n\n  const classes = useStyle();\n  return (\n    <Grid container md={12} justify=\"center\">\n      <Grid item md={12}>\n        <Box m={3}>\n          <Grid\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Typography>Menu </Typography>\n            <Typography>{category}</Typography>\n          </Grid>\n        </Box>\n        <Divider />\n        {!loading && <MenuItems dishes={dishes} />}\n      </Grid>\n      <Grid item md={12}>\n        <Box border={0} m={2} align=\"center\">\n          <MenuFooter setCategory={setCategory} category={category} />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}