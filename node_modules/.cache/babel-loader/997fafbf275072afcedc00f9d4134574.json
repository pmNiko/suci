{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikolas/Documents/React/Proyecto Final/suci/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./styles/themeConfig\";\nimport { Navbar } from \"./components/common/navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"; // consulta a la  API Graphql\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_ORDERS } from \"./services/Queries\";\nimport { connect } from \"react-redux\";\nimport { fetchOrders } from \"./redux/actions/orderAction\"; // lazy es una función y Suspense es un componente\n\nimport React, { lazy, Suspense, useEffect } from \"react\";\n/*  React carga los componentes de manera sincronica, \n    lazy load hace que los componentes se carguen de manera\n    diferida a medida que los vayamos requiriendo. Lazy busca \n    el componente y Suspense lo inyecta al DOM */\n\nconst IndexMozo = /*#__PURE__*/lazy(_c = () => import(\"./components/layout/mozo/IndexMozo\"));\n_c2 = IndexMozo;\nconst Kitchen = /*#__PURE__*/lazy(_c3 = () => import(\"./components/pages/kitchen\"));\n_c4 = Kitchen;\nconst Till = /*#__PURE__*/lazy(_c5 = () => import(\"./components/layout/till/Till\"));\n_c6 = Till;\nconst Floor = /*#__PURE__*/lazy(_c7 = () => import(\"./components/pages/floor\"));\n_c8 = Floor;\n\nfunction App({\n  fetchOrders\n}) {\n  _s();\n\n  // consulta a partir del hook de apollo\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ORDERS);\n  useEffect(() => {\n    if (data) {\n      if (data.orders.length > 0) {\n        // let orders = data.orders.filter((order) => order.closed === false);\n        // console.log(orders[0].number, orders[0].dishes[0].state);\n        fetchOrders(data.orders);\n      }\n    }\n\n    console.log(\"Data orders: \", data);\n    console.log(\"loading orders: \", loading);\n    console.log(\"error orders: \", error);\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: \"Cargando...\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: Floor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/mozo/:order_id_param\",\n            exact: true,\n            component: IndexMozo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/kitchen\",\n            exact: true,\n            component: Kitchen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/till\",\n            exact: true,\n            component: Till\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/floor\",\n            exact: true,\n            component: Floor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MIyWK+WDGXozRNXYyIBuaVd7f4g=\", false, function () {\n  return [useQuery];\n});\n\n_c9 = App;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchOrders: payload => dispatch(fetchOrders(payload))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"IndexMozo$lazy\");\n$RefreshReg$(_c2, \"IndexMozo\");\n$RefreshReg$(_c3, \"Kitchen$lazy\");\n$RefreshReg$(_c4, \"Kitchen\");\n$RefreshReg$(_c5, \"Till$lazy\");\n$RefreshReg$(_c6, \"Till\");\n$RefreshReg$(_c7, \"Floor$lazy\");\n$RefreshReg$(_c8, \"Floor\");\n$RefreshReg$(_c9, \"App\");","map":{"version":3,"sources":["/Users/nikolas/Documents/React/Proyecto Final/suci/src/App.js"],"names":["ThemeProvider","theme","Navbar","BrowserRouter","Router","Route","Switch","useQuery","GET_ORDERS","connect","fetchOrders","React","lazy","Suspense","useEffect","IndexMozo","Kitchen","Till","Floor","App","loading","error","data","orders","length","console","log","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./styles/themeConfig\";\nimport { Navbar } from \"./components/common/navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// consulta a la  API Graphql\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_ORDERS } from \"./services/Queries\";\nimport { connect } from \"react-redux\";\nimport { fetchOrders } from \"./redux/actions/orderAction\";\n\n// lazy es una función y Suspense es un componente\nimport React, { lazy, Suspense, useEffect } from \"react\";\n/*  React carga los componentes de manera sincronica, \n    lazy load hace que los componentes se carguen de manera\n    diferida a medida que los vayamos requiriendo. Lazy busca \n    el componente y Suspense lo inyecta al DOM */\nconst IndexMozo = lazy(() => import(\"./components/layout/mozo/IndexMozo\"));\nconst Kitchen = lazy(() => import(\"./components/pages/kitchen\"));\nconst Till = lazy(() => import(\"./components/layout/till/Till\"));\nconst Floor = lazy(() => import(\"./components/pages/floor\"));\n\nfunction App({ fetchOrders }) {\n  // consulta a partir del hook de apollo\n  const { loading, error, data } = useQuery(GET_ORDERS);\n\n  useEffect(() => {\n    if (data) {\n      if (data.orders.length > 0) {\n        // let orders = data.orders.filter((order) => order.closed === false);\n        // console.log(orders[0].number, orders[0].dishes[0].state);\n        fetchOrders(data.orders);\n      }\n    }\n    console.log(\"Data orders: \", data);\n    console.log(\"loading orders: \", loading);\n    console.log(\"error orders: \", error);\n  }, [loading]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      {/* El BrowserRouter es quien maneja el routing y este va en el \n        nivel mas alto de la app */}\n      <Router>\n        <Navbar />\n        {/* Inyecta el componente en el dom */}\n        <Suspense fallback={\"Cargando...\"}>\n          {/* El Switch sirve para renderizar la primer coincidencia */}\n          <Switch>\n            {/* Route se encarga de sentenciar las rutas con las cuales\n            renderear los componentes y la variante exact matchea la ruta exacta*/}\n            <Route path=\"/\" exact component={Floor} />\n            <Route path=\"/mozo/:order_id_param\" exact component={IndexMozo} />\n            <Route path=\"/kitchen\" exact component={Kitchen} />\n            <Route path=\"/till\" exact component={Till} />\n            <Route path=\"/floor\" exact component={Floor} />\n          </Switch>\n        </Suspense>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchOrders: (payload) => dispatch(fetchOrders(payload)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}